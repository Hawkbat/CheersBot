
Architecture
    Hydrate users on-demand to reduce memory overhead (bots and channels need to always be running to listen for events)
    Log client-side errors by building a buffer of log messages and sending them on an interval, silently requeuing them if the server was not accessible
        Filter out server unavailable errors from CloudFlare since those are frequent
    Temporarily disable action buttons when firing off an async process, showing a spinner while the async function runs and then reenabling when the function returns. If an error occurs, show an error icon in the button which shows the error message on mouse over
    Add Discord integration for emotes and then for reactive PNG support

Channel Features
    Non-channel-point notifications
        Follow
        Sub
        Gifted Sub
        Bit
        Donation
        Raid
        Host
    
    Stream goals
        Follows/Subs/Bits/Donations
        Optional start/end dates
        Fun animations or sounds when goals are reached

    Configure Bots
        Allow multiple bots to be registered to the channel (for debugging purposes mostly)
        Configure which bot is primary via dropdown
        Configure which bots have access via UI

    Notification settings
        Trigger-via-timeout (mostly done)
            Still need configurable timer
        Grouping/merging options (add, replace, maximum, total)
        Auto-expire timer
        Custom notification messages
        Custom emote icon (chosen from streamer icons via twitchemotes API)
        Timer combination modes (replace, extend)

    Channel Point rewards
        Configure rewards in UI
        Enable/disable notifications
        Out-of-stock bot messages and/or notifications

Other Features (Long-Term)
    Viewer game drafting/raffle system
        Opt in via chat command, optionally giving context (competitive rank, etc.)
        Rules for randomly selecting participants
            Randomly from first X viewers in queue
            Chance multipliers for followers/subs
        Choose to move to back of queue or remove from queue
        Make sure viewers aren't counted multiple times
    Chat vote system (not really necessary, but could be fun to do for a "complete package" overlay)
    Twitch-integrated VRM-compatible games
    Integrations for posting and deleting go-live posts on Twitter and Discord
    Reactive PNG browser source that the other streamers can add when doing a collab with this streamer
    Pred system
        Visualize by adding a rectangular box under a bubble
        Submit preds with `!pred X-Y` or 'guest' preds can be added directly through the control panel
        Maybe include Discord bot integration to automatically populate guests? If so, do not automatically remove guests if they have input a prediction for the current match
        Button to clear out all teams and preds
    Channel point redemption analytics
        Add tracking on how many times any channel point reward is redeemed, and by who
        Consider storing this data in a separate store, since it's effectively logging and is a lot of data to be updating continuously; maybe some kind of cloud-based store?
    NEED GUIDES on how to set things up! Inside the app itself if possible so it can't go horribly out of date
    
Miscellaneous features
    Make it easier to copy usernames of ban-redeemed people (clipboard copy button maybe?)
    Add option to emit timer sounds to separate browser source that can have its audio monitored separately so it doesn't go to desktop audio
    Add Text-To-Speech for redeems and subscriptions

Bugs
    Hitting "Complete" and then "Thoroughly patted" in short succession causes the counter to go negative